# Generated by Django 2.2 on 2020-07-26 02:36

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('location', models.TextField(choices=[('nh', 'Higashiyama (Niseko-cho)'), ('nt', 'Niseko-cho town'), ('nk', 'Kondo Niseko-cho'), ('kh', 'Hirafu (Kutchan-cho)'), ('kk', 'Kabayama (Kutchan-cho)'), ('kt', 'Kutchan town center'), ('oo', 'Others')], default='nt', max_length=2)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'users',
                'verbose_name': 'user',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AbstractBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('summary', models.TextField(help_text='Enter a quick description for the model', max_length=1000)),
                ('isbn', models.CharField(help_text='13 characters which describe the book', max_length=13, verbose_name='ISBN')),
            ],
        ),
        migrations.CreateModel(
            name='ActualBook',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this actual book', primary_key=True, serialize=False)),
                ('created_date', models.DateField(default=django.utils.timezone.now, editable=False)),
                ('status', models.CharField(choices=[('a', 'Available'), ('u', 'Unavailable'), ('o', 'Out for lent')], default='a', max_length=1)),
                ('abstract_book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instances', to='bookHandler.AbstractBook')),
                ('owner', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='book_inventory', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a book genre(e.g. crime, historical fiction, ...', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for the transaction', primary_key=True, serialize=False)),
                ('lend_date', models.DateField(default=django.utils.timezone.now)),
                ('return_date', models.DateField(default=django.utils.timezone.now)),
                ('transaction_type', models.CharField(choices=[('i', 'Initial Transaction'), ('e', 'Extension')], default='i', max_length=1)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='bookHandler.ActualBook')),
                ('borrower', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-lend_date'],
            },
        ),
        migrations.AddField(
            model_name='abstractbook',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='written_books', to='bookHandler.Author'),
        ),
        migrations.AddField(
            model_name='abstractbook',
            name='genre',
            field=models.ManyToManyField(help_text='Select one or many genres for this book', to='bookHandler.Genre'),
        ),
    ]
